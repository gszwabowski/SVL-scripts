// Commentary by GLS 7/25/22
//
// This script is used to loop through a docking database,
// get the top 5 scoring poses for each mseq number in each docking database,
// and write each best scoring pose to an output database.
//
// ARGUMENTS
// =========
// output_prefix: desired prefix of output database

global function get_top5scored_poses_by_mseq [mdb, output_prefix]

local mseq, entry, mseq_entry, t5_entry;
local field_names, field_types;

// create output_mdb and get fieldnames from first mdbs
local namebase = tok_drop [fbase mdb, -2];
local output_mdb = db_Open [tok_cat[output_prefix, '_top5scored_poses.mdb'],'create'];
[field_names, field_types] = db_Fields mdb;

//create fields from first mdbs in output_mdb
local i;
for i = 1, length field_names, 1 loop
	db_EnsureField [output_mdb, field_names(i), field_types(i)];
endloop

write ['Getting top 5 scored poses per mseq from {}.\n', mdb];
local entries = db_Entries mdb;
local mseqs = uniq db_ReadColumn [mdb, 'mseq'];
// loop through each mseq
for mseq in mseqs loop
	local mseq_entries = [];
	// loop through each entry
	for entry in entries loop
		// get entries matching mseq
		if db_ReadFields [mdb, entry, 'mseq'] == mseq then
			mseq_entries = cat[mseq_entries, entry];
		endif
	endloop
	local mseq_entries_t5 = keep [mseq_entries, 5];
		
	//get the first entry matching the mseq's entry record, write it to output_mdb
	for t5_entry in mseq_entries_t5 loop
		local entry_record = db_Read [mdb, t5_entry];
		db_Write [output_mdb, 0, entry_record ];
	endloop
endloop

write ['Done. Poses written to {}\n', tok_cat[output_prefix, '_topscored_poses.mdb']];
	
endfunction
