#svl
function ph4_Search;


global function feature_search_dir [lig_mdb];
// sort type is the score type
local files = flist[[],'*.ph4'];
local ph4fname;
local hits = [];


for ph4fname in files loop
print ph4fname;
local score_type = fbase ph4fname;
logfile 'log.txt';
ph4_Search [lig_mdb, ph4fname, 
		[
            abspos                : 0,
            action                : 0,
            descexpr              : '',
            esel                  : 0,
	    matchsize             : 3,
            maxconfhits           : 0,
            maxmolhits            : 0,
            molfield              : 'mol',
	    mseqfield		  :'mseq',
            o_molfield            : 'mol',
            o_mseqfield           : 'mseq',
            o_rmsdxfield          : 'rmsdx',
            o_rscore_colfield     : 'rscore[F#]',
            o_rscore_sumfield     : 'rscore',
            out_append            : 0,
            out_dbfile            : tok_cat [score_type, '_3.mdb'],
            out_dbv               : 0,
            out_type_molecules    : 1,
            sortby                : 'rmsdx',
            use_mname             : 0,
            use_mseqfield         : 1,
            use_o_fileIdxField    : 0,
            use_o_fileNameField   : 0,
            use_o_hitmapfield     : 0,
            use_o_hitmapfieldC    : 0,
            use_o_hitsizefield    : 0,
            use_o_hitsizefieldC   : 0,
            use_o_molfield        : 1,
            use_o_mseqfield       : 1,
            use_o_rmsdfield       : 0,
            use_o_rmsdxfield      : 1,
            use_o_rowfield        : 0,
            use_o_rscore_colfield : 1,
            use_o_rscore_sumfield : 1,
            use_o_rscore_vecfield : 0,
            use_out_dbfile        : 1,
            usepsilo              : 0
        ]
];

logfile 0;
	logfile[];

	//obtain hits from log file
	local hitline = last freadb ['log.txt', 'line', INT_MAX];
	local ws = wordsplit [hitline, " "];
	local hits1 = ws(3);
	hits1 = atoi token hits1;
	hits1 = cat[tok_cat [score_type, '_3'], hits1];

logfile 'log.txt';
ph4_Search [lig_mdb, ph4fname, 
		[
            abspos                : 0,
            action                : 0,
            descexpr              : '',
            esel                  : 0,
	    matchsize             : 4,
            maxconfhits           : 0,
            maxmolhits            : 0,
            molfield              : 'mol',
	    mseqfield		  : 'mseq',
            o_molfield            : 'mol',
            o_mseqfield           : 'mseq',
            o_rmsdxfield          : 'rmsdx',
            o_rscore_colfield     : 'rscore[F#]',
            o_rscore_sumfield     : 'rscore',
            out_append            : 0,
            out_dbfile            : tok_cat [score_type, '_4.mdb'],
            out_dbv               : 0,
            out_type_molecules    : 1,
            sortby                : 'rmsdx',
            use_mname             : 0,
            use_mseqfield         : 1,
            use_o_fileIdxField    : 0,
            use_o_fileNameField   : 0,
            use_o_hitmapfield     : 0,
            use_o_hitmapfieldC    : 0,
            use_o_hitsizefield    : 0,
            use_o_hitsizefieldC   : 0,
            use_o_molfield        : 1,
            use_o_mseqfield       : 1,
            use_o_rmsdfield       : 0,
            use_o_rmsdxfield      : 1,
            use_o_rowfield        : 0,
            use_o_rscore_colfield : 1,
            use_o_rscore_sumfield : 1,
            use_o_rscore_vecfield : 0,
            use_out_dbfile        : 1,
            usepsilo              : 0
        ]
];

logfile 0;
	logfile[];

	//obtain hits from log file
	hitline = last freadb ['log.txt', 'line', INT_MAX];
	ws = wordsplit [hitline, " "];
	local hits2 = ws(3);
	hits2 = atoi token hits2;
	hits2 = cat[tok_cat [score_type, '_4'], hits2];

logfile 'log.txt';
ph4_Search [lig_mdb, ph4fname, 
		[
            abspos                : 0,
            action                : 0,
            descexpr              : '',
            esel                  : 0,
			matchsize             : 5,
            maxconfhits           : 0,
            maxmolhits            : 0,
            molfield              : 'mol',
	    mseqfield		  : 'mseq',
            o_molfield            : 'mol',
            o_mseqfield           : 'mseq',
            o_rmsdxfield          : 'rmsdx',
            o_rscore_colfield     : 'rscore[F#]',
            o_rscore_sumfield     : 'rscore',
            out_append            : 0,
            out_dbfile            : tok_cat [score_type, '_5.mdb'],
            out_dbv               : 0,
            out_type_molecules    : 1,
            sortby                : 'rmsdx',
            use_mname             : 0,
            use_mseqfield         : 1,
            use_o_fileIdxField    : 0,
            use_o_fileNameField   : 0,
            use_o_hitmapfield     : 0,
            use_o_hitmapfieldC    : 0,
            use_o_hitsizefield    : 0,
            use_o_hitsizefieldC   : 0,
            use_o_molfield        : 1,
            use_o_mseqfield       : 1,
            use_o_rmsdfield       : 0,
            use_o_rmsdxfield      : 1,
            use_o_rowfield        : 0,
            use_o_rscore_colfield : 1,
            use_o_rscore_sumfield : 1,
            use_o_rscore_vecfield : 0,
            use_out_dbfile        : 1,
            usepsilo              : 0
        ]
];

	logfile 0;
	logfile[];

	//obtain hits from log file
	hitline = last freadb ['log.txt', 'line', INT_MAX];
	ws = wordsplit [hitline, " "];
	local hits3 = ws(3);
	hits3 = atoi token hits3;
	hits3 = cat[tok_cat [score_type, '_5'], hits3];

	local hitv = cat [hits1,hits2,hits3];
	hits = cat [hits, hitv];
endloop
//print hits;
write ['{} : {}\n', hits(1),hits(2)];
write ['{} : {}\n', hits(3),hits(4)];
write ['{} : {}\n', hits(5),hits(6)];
write ['{} : {}\n', hits(7),hits(8)];
write ['{} : {}\n', hits(9),hits(10)];
write ['{} : {}\n', hits(11),hits(12)];
write ['{} : {}\n', hits(13),hits(14)];
write ['{} : {}\n', hits(15),hits(16)];
write ['{} : {}\n', hits(17),hits(18)];
write ['{} : {}\n', hits(19),hits(20)];
write ['{} : {}\n', hits(21),hits(22)];
write ['{} : {}\n', hits(23),hits(24)];
//print hits1;
//print hits2;
//print hits3;

endfunction
